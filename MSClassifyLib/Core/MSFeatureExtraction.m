classdef MSFeatureExtraction < matlab.mixin.Copyable & matlab.mixin.Heterogeneous
  % Abstract class for feature map extraction
  %
  % This class is an abstract base class for feature extraction classes. 
  % Contains the createMap(obj, msData, itemMask) method which returns an
  % MSFeatureMap from the input msData.
  % A derived feature extraction has to define the createMap_impl(obj, msData, itemMask) 
  %
  % Properties
  %   maxNumFeatures
  %
  % Methods:
  %   MSFeatureExtraction: Constructor
  %   createMap: returns an MSFeatureMap from input data
  %   createMap_impl (Abstract)
  %
  % MSFeatureMap uses the handle semantic, i.e. when assigning an object
  % of this class to a variable, only a reference to the original object is
  % copied. Use the copy method to create a deep copy.
  properties (SetAccess = immutable)
   maxNumFeatures=inf; % Max number of features (default value=inf)
  end
  properties
    supportsDataPartition=false;
  end
  properties (Access = protected)
   supportLabelData=false;
  end
  methods
      function obj = MSFeatureExtraction (maxNumFeatures)
      % Constructor
      % obj = MSFeatureExtraction: Create a feature extraction object with 
      % maxNumFeatures.
      % obj = MSFeatureMap(creator): Additionally specify the feature map's
      %   creator string. The creator string is stored in feature data
      %   objects generated by this map.
      narginchk(0,1)
      if nargin > 0
          if ~(isscalar(maxNumFeatures) && maxNumFeatures>=1)
              error('maxNumFeatures must be either inf or a positive integer');
          end
          obj.maxNumFeatures = floor(maxNumFeatures);
      end
      end
      
      function map = createMap (obj, msData, labels)
      % Create an MSFeatureMap map
      % map = obj.createMap(msData, labels):
      %   msData: Input dataset (MSMaldiData)
      %   labels: Optional MSLabelData or numerical vector selecting a subset of data
      %     items to be used either as data mask or to select the feature
      %     data (like in the derived class MSROCPicking)
      %
      %   The function checks the validity of the input and calls the
      %   method createMap_impl which must be defined in all
      %   non-abstract descendents of MSFeatureExtraction
      
      % Check input arguments
      narginchk(1,3)
      if ~isa(msData, 'MSMaldiData')
        error('msData must be an MSMaldiData object')
      end
      msData.assert;
      if nargin<3||isempty(labels)
          lbls = ones(msData.numItems,1);
      else
          if isa(labels, 'MSDataPartition') && obj.supportsDataPartition
              lbls = labels;
          elseif isa(labels, 'MSLabelData')
              labels.assert;
              if labels.dataLength ~= 1
                  error('MSLabelData argument must have one label column')
              end
              lbls=labels.data;
          elseif islogical(labels)
              lbls=labels(:)+0;
          else
              if ~(isnumeric(labels) && isvector(labels))
                  error('labels must be either an MSLabelData, a logical or a numerical array')
              end
              lbls=labels(:);
          end
          if length(lbls)~=msData.numItems && ~obj.supportsDataPartition
              error('labels and msData must have the same number of items')
          end
          if isa(labels, 'MSLabelData') && obj.supportLabelData
              lbls = labels;
          end
      end
      map = createMap_impl(obj, msData, lbls);
      end
  end
 
  methods (Abstract, Access=protected)
    featureMap = createMap_impl (obj, msData, labels)
  end
end